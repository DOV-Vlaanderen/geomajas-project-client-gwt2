<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2014 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-howto">
  <title>How-to</title>

  <section>
    <title>Adding a map to a GWT 2.0 layout</title>

    <para>A special MapLayout class is provided for adding a map to a GWT 2.0
    layout class (class that have Layout in their name and follow a sizing
    hierarchy). No special resize handling is needed for this case:</para>

    <programlisting>MapLayoutPanel mapLayout = new MapLayoutPanel();
mapLayout.setPresenter(mapPresenter);
RootLayoutPanel.get().add(layout); // fills the complete browser view</programlisting>
  </section>

  <section>
    <title>How to catch the location of mouse events on the map?</title>

    <para>An often asked for use-case is to display the location (in World
    space) of the mouse when it hovers over the map. This is done be adding a
    listeners to the map that reacts to the onMouseMove events:</para>

    <programlisting>final Label label = new Label();
mapPresenter.addMapListener(new AbstractMapController() {

    public void onMouseMove(MouseMoveEvent event) {
        Coordinate location = getLocation(event, RenderSpace.WORLD);
        label.setText("Location: " + location.toString());
    };
});</programlisting>

    <para>Note that we started from an <code>AbstractMapController</code> to
    create a new <code>MapController</code> implementation. This is by far the
    easiest way to create new controllers. From there we used the
    <code>getLocation</code> method to actually acquire the correct location
    in World space (map CRS).</para>
  </section>

  <section>
    <title>How to enable/disable animation on a layer?</title>

    <para>By default only one layer will be animated when navigating on the
    map: the bottom layer. The other layers will dissappear while navigating
    and reappear when navigation has finished. Sometimes one may wish to
    animate more than one layer during navigation (or perhaps all layers).
    This is actually pretty straightforward. Since it's the renderer thats
    responsible, it is there we can change this setting:</para>

    <programlisting>Layer layer = mapPresenter.getLayersModel().getLayer(1);
mapPresenter.getLayersModelRenderer().setAnimated(layer, true);</programlisting>
  </section>
</chapter>
